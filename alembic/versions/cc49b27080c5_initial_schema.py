"""initial_schema

Revision ID: cc49b27080c5
Revises: 
Create Date: 2023-12-10 21:12:32.340394

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'cc49b27080c5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('gst', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kyc_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('module',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['order_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('package_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phone_otp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone_no', sa.Integer(), nullable=True),
    sa.Column('otp', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('expiry_time', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('users_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hsn_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sku', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tax_rate', sa.Float(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_package',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('returns_reason',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('returns_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['returns_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_purpose',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('package',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['package_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('contact_no', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('alternate_contact_no', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('plan_type_id', sa.Integer(), nullable=True),
    sa.Column('subscription_status_id', sa.Integer(), nullable=True),
    sa.Column('subscription_span', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('kyc_status_id', sa.Integer(), nullable=True),
    sa.Column('total_order_ship_monthly', sa.Integer(), nullable=True),
    sa.Column('users_type_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['kyc_status_id'], ['kyc_status.id'], ),
    sa.ForeignKeyConstraint(['plan_type_id'], ['plan_type.id'], ),
    sa.ForeignKeyConstraint(['subscription_status_id'], ['subscription_status.id'], ),
    sa.ForeignKeyConstraint(['users_type_id'], ['users_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=True),
    sa.Column('order_type_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('channel', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('channel_invoice_no', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reseller_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('channel_invoice_date', sa.DateTime(), nullable=True),
    sa.Column('payment_transaction_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('website_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipment_purpose_id', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('shipping_charges', sa.Float(), nullable=True),
    sa.Column('gift_wrap', sa.Float(), nullable=True),
    sa.Column('transaction_fees', sa.Float(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('sub_total', sa.Float(), nullable=True),
    sa.Column('other_charges', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('dead_weight', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('volumatric_package_id', sa.Integer(), nullable=True),
    sa.Column('volumatric_weight', sa.Float(), nullable=True),
    sa.Column('applicable_weight', sa.Float(), nullable=True),
    sa.Column('shipped_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('invoice_generate_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pickup_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['order_type_id'], ['order_type.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_type.id'], ),
    sa.ForeignKeyConstraint(['shipment_purpose_id'], ['shipment_purpose.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['order_status.id'], ),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['volumatric_package_id'], ['package.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('returns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('returns_reason_id', sa.Integer(), nullable=True),
    sa.Column('comments', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('channel', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('sub_total', sa.Float(), nullable=True),
    sa.Column('other_charges', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('dead_weight', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('volumatric_package_id', sa.Integer(), nullable=True),
    sa.Column('volumatric_weight', sa.Float(), nullable=True),
    sa.Column('applicable_weight', sa.Float(), nullable=True),
    sa.Column('pickup_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_type.id'], ),
    sa.ForeignKeyConstraint(['returns_reason_id'], ['returns_reason.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['returns_status.id'], ),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['volumatric_package_id'], ['package.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_auth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('users_id', sa.Integer(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address_line1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address_line2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('complete_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('landmark', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pincode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address_verification', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_used_order_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['last_used_order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['address_type.id'], ),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('product_package_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['product_package_id'], ['product_package.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('returns_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('return_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('category_tax', sa.Float(), nullable=True),
    sa.Column('brand', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['return_id'], ['returns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('returns_product')
    op.drop_table('order_product')
    op.drop_table('address')
    op.drop_table('users_role')
    op.drop_table('users_auth')
    op.drop_table('returns')
    op.drop_table('order')
    op.drop_table('users')
    op.drop_table('package')
    op.drop_table('users_type')
    op.drop_table('subscription_status')
    op.drop_table('shipment_purpose')
    op.drop_table('returns_status')
    op.drop_table('returns_reason')
    op.drop_table('product_package')
    op.drop_table('product')
    op.drop_table('plan_type')
    op.drop_table('phone_otp')
    op.drop_table('payment_type')
    op.drop_table('package_type')
    op.drop_table('order_type')
    op.drop_table('order_status')
    op.drop_table('module')
    op.drop_table('kyc_status')
    op.drop_table('currency')
    op.drop_table('company')
    op.drop_table('address_type')
    # ### end Alembic commands ###
