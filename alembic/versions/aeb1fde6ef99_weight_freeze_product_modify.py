"""weight freeze product modify

Revision ID: aeb1fde6ef99
Revises: b22e84a9c5dd
Create Date: 2024-01-21 22:31:55.582551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'aeb1fde6ef99'
down_revision: Union[str, None] = 'b22e84a9c5dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('weight_freeze_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weight_freeze',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('product_category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('chargeable_weight', sa.Float(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('modified_by', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['weight_freeze_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('product', sa.Column('img_1', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('product', sa.Column('img_2', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('product', sa.Column('length_img', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('product', sa.Column('width_img', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('product', sa.Column('height_img', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('product', sa.Column('weight_img', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('product', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('product', sa.Column('modified_by', sa.Integer(), nullable=True))
    op.add_column('product', sa.Column('created_date', sa.DateTime(), nullable=True))
    op.add_column('product', sa.Column('modified_date', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'product', 'users', ['modified_by'], ['id'])
    op.create_foreign_key(None, 'product', 'users', ['created_by'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.drop_constraint(None, 'product', type_='foreignkey')
    op.drop_column('product', 'modified_date')
    op.drop_column('product', 'created_date')
    op.drop_column('product', 'modified_by')
    op.drop_column('product', 'created_by')
    op.drop_column('product', 'weight_img')
    op.drop_column('product', 'height_img')
    op.drop_column('product', 'width_img')
    op.drop_column('product', 'length_img')
    op.drop_column('product', 'img_2')
    op.drop_column('product', 'img_1')
    op.drop_table('weight_freeze')
    op.drop_table('weight_freeze_status')
    # ### end Alembic commands ###
