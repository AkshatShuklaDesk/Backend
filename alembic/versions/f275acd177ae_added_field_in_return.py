"""added_field_in_return

Revision ID: f275acd177ae
Revises: b5d9ced77563
Create Date: 2024-01-08 12:43:08.435851

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f275acd177ae'
down_revision: Union[str, None] = 'b5d9ced77563'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('returns', sa.Column('return_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('returns', sa.Column('pickup_address_id', sa.Integer(), nullable=True))
    op.alter_column('returns', 'created_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('returns', 'modified_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_foreign_key(None, 'returns', 'address', ['pickup_address_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'returns', type_='foreignkey')
    op.alter_column('returns', 'modified_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('returns', 'created_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('returns', 'pickup_address_id')
    op.drop_column('returns', 'return_id')
    # ### end Alembic commands ###
